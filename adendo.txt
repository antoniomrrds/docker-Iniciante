docker compose build = Constrói a imagem 
docker compose up = ele inicia o serviço
docker compose up -d(serve para rodar em segundo plano e nao travar a console)
docker compose up -d (name do service docker-compose.yml) para executar por partes
docker compose stop = para o container

docker ps =  lista os container 
docker ps -aq = vai mostrar somente os id
docker logs (containerID) = logs do container

docker logs -f NOME_DO_CONTAINER => Para visualizar os logs de um contêiner Docker e acompanhar em tempo real, você pode usar o comando docker logs junto com a opção -f (follow).

docker-compose logs -f node-api =>   Se precisar ver detalhes específicos, como logs de apenas um serviço dentro do Docker Compose, você pode usar o nome do serviço em vez do nome do contêiner. Por exemplo, se você tiver um serviço chamado node-api em seu Docker Compose

docker ps -f(filter) name=(nome do container) =  server para filtar o container d
docker inspect (name do container) =  inspecionando um container
docker rm $(docker ps -aq) = remove todos os containers rodando 

docker build -t (name  algofields/frontend ) . = Constrói a imagem 
docker images = lista as images
docker rmi -f = exclui as images
docker rmi $(docker images -q) =  remove todas as imagens
docker run-p 3000:3000 (nome da imagem) = executa ela  



docker system df -v(more information) =  vai listar as imagens e espaco utilizado
docker container prune = vai apagar todos os container nao utilizados(cuidado)
docker image prune = vai deletar todas as imagens não utilizadas
docker system prune = vai deletar tudo nao utilizado

